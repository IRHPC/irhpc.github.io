"use strict";(self.webpackChunkhpcdocs=self.webpackChunkhpcdocs||[]).push([[3012],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>d});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),u=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=u(e.components);return r.createElement(s.Provider,{value:n},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},g=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=u(t),g=a,d=c["".concat(s,".").concat(g)]||c[g]||m[g]||o;return t?r.createElement(d,i(i({ref:n},p),{},{components:t})):r.createElement(d,i({ref:n},p))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=g;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[c]="string"==typeof e?e:a,i[1]=l;for(var u=2;u<o;u++)i[u]=t[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}g.displayName="MDXCreateElement"},2745:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var r=t(7462),a=(t(7294),t(3905));const o={slug:"TensorFlow-GPU"},i="TensorFlow",l={unversionedId:"compiling/TensorFlow-GPU",id:"compiling/TensorFlow-GPU",title:"TensorFlow",description:"Inngangur",source:"@site/i18n/is/docusaurus-plugin-content-docs/current/compiling/07_TensorFlow-GPU.md",sourceDirName:"compiling",slug:"/compiling/TensorFlow-GPU",permalink:"/is/docs/compiling/TensorFlow-GPU",draft:!1,editUrl:"https://github.com/irhpc/irhpc.github.io/edit/main/docs/compiling/07_TensorFlow-GPU.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{slug:"TensorFlow-GPU"},sidebar:"tutorialSidebar",previous:{title:"Metaerg",permalink:"/is/docs/compiling/Metaerg"},next:{title:"Singularity",permalink:"/is/docs/compiling/singularity"}},s={},u=[{value:"Inngangur",id:"inngangur",level:2},{value:"Getting started",id:"getting-started",level:2},{value:"D\xe6mi um lotu skr\xe1",id:"d\xe6mi-um-lotu-skr\xe1",level:3},{value:"Gagnvirk keyrsla",id:"gagnvirk-keyrsla",level:3}],p={toc:u},c="wrapper";function m(e){let{components:n,...t}=e;return(0,a.kt)(c,(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"tensorflow"},"TensorFlow"),(0,a.kt)("h2",{id:"inngangur"},"Inngangur"),(0,a.kt)("p",null,"TensorFlow me\xf0 skj\xe1kortsstu\xf0ning (TF2-gpu) er \xed bo\xf0i til notkunar \xe1 ",(0,a.kt)("strong",{parentName:"p"},"Elju"),". Lestu meira um TensorFlow \xe1 ",(0,a.kt)("a",{parentName:"p",href:"https://www.tensorflow.org/"},"h\xe9r"),"."),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"getting-started"},"Getting started"),(0,a.kt)("p",null,"TF2-gpu er pakka\xf0 \xed conda umhverfi. Til a\xf0 nota conda umhverfi\xf0 vinsamlegast fylgdu ",(0,a.kt)("strong",{parentName:"p"},"uppsetningar")," lei\xf0beiningunum sem gefnar eru ",(0,a.kt)("a",{parentName:"p",href:"/is/docs/compiling/rcondapython"},"h\xe9r"),". \xdeegar uppsetningu conda er loki\xf0 getur\xf0u hla\xf0i\xf0 inn \xed TF2-gpu umhverfi\xf0 eins og h\xe9r:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"[..]$ module use /hpcapps/libbio-gpu/modules/all/\n[..]$ ml load tf2-gpu\n[..]$ conda activate /hpcapps/conda_env/TF2-gpu/2.4.1\n")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"d\xe6mi-um-lotu-skr\xe1"},"D\xe6mi um lotu skr\xe1"),(0,a.kt)("p",null,"\xdea\xf0 er nau\xf0synlegt a\xf0 keyra TF2-gpu \xe1 GPU hn\xfatunum. D\xe6mi um SBATCH pr\xf3funar skr\xf3 er veitt\nh\xe9r a\xf0 ne\xf0an. Til a\xf0 keyra pr\xf3fi\xf0 \xfearftu fyrst a\xf0 kl\xf3na \xfeessa ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/PrincetonUniversity/slurm_mnist"},"geymslu"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"[..]$ cd $HOME\n[..]$ git clone https://github.com/PrincetonUniversity/slurm_mnist.git\n[..]$ cd slurm_mnist\n")),(0,a.kt)("p",null,"Afrita\xf0u eftirfarandi SBATCH skriftu inn \xed ",(0,a.kt)("strong",{parentName:"p"},"slurm_mnist")," m\xf6ppuna"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'[..]$ cat submit.slurm\n#!/bin/bash\n#SBATCH --mail-type=ALL\n#SBATCH --mail-user=<MAIL>         # for example uname@hi.is\n#SBATCH --nodes=1                  # number of nodes\n#SBATCH --partition=gpu-1xA100\n#SBATCH --time=1-00:00:00          # run for 1 day maximum\n#SBATCH --output=slurm_job_output.log\n#SBATCH --error=slurm_job_errors.log   # Logs if job crashes\n\nmodule use /hpcapps/libbio-gpu/modules/all\nmodule load tf2-gpu\nconda activate /hpcapps/conda_env/TF2-gpu/2.4.1\n\nscratchlocation=/scratch/users\n\n# Create a user scratch directory on the compute node\nif [ ! -d $scratchlocation/$USER ]; then\n    mkdir -p $scratchlocation/$USER\nfi\n\n# Create a temporary directory\ntdir=$(mktemp -d $scratchlocation/$USER/$SLURM_JOB_ID-XXXX)\n\n# Go to the temporary directory\ncd $tdir\n\n# Exit if tdir does not exist\nif [ ! -d $tdir ]; then\n    echo "Temporary scratch directory does not exist ..."\n    echo "Something is wrong, contact support."\n    exit\nfi\n\n# Copy the necessary run file\ncp $SLURM_SUBMIT_DIR/mnist_classify.py $tdir/\n\n# If the program needs more input files you can add a separate line for each file.\n\n# If your job requires a directory of input/data files\n# cp -r $SLURM_SUBMIT_DIR/myinputdir $tdir/\n\n# Now the run the job from the temporary directory e.g.\npython mnist_classify.py\n\n# Copy the output (if any) to your submit directory.\ncp $tdir/* $SLURM_SUBMIT_DIR/\n\n# If the program produces many output files you can add a separate line for each file.\n# Please try to only copy the files that you need.\n\n# IMPORTANT. Delete the temporary directory and all of its content\nrm -rf $tdir\n')),(0,a.kt)("p",null,"N\xfa getur \xfe\xfa sent lotuna af staf."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"[..]$ sbatch submit.slurm\n")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"gagnvirk-keyrsla"},"Gagnvirk keyrsla"),(0,a.kt)("p",null,"\xcd \xfeessu pr\xf3funartilviki, vertu viss um a\xf0 \xfe\xfa hafir kl\xf3na\xf0 \xfeessa ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/PrincetonUniversity/slurm_mnist"},"geymslu")," (sj\xe1 kaflann h\xe9r a\xf0 ofan)."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'[..]$ srun --job-name "TF2-gpu" --partition gpu-1xA100 --time 1-00:00:00 --pty bash\n')),(0,a.kt)("p",null,"Hla\xf0i\xf0 inn \xed einingarnar og virkja\xf0u TF2-gpu umhverfi\xf0"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"[..]$ module use /hpcapps/libbio-gpu/modules/all/\n[..]$ ml load tf2-gpu\n[..]$ conda activate /hpcapps/conda_env/TF2-gpu/2.4.1\n")),(0,a.kt)("p",null,"Far\xf0u inn \xed ",(0,a.kt)("strong",{parentName:"p"},"slurm_mnist")," m\xf6ppuna"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"[..]$ cd $HOME/slurm_mnist\n")),(0,a.kt)("p",null,"Keyr\xf0u prufu skriftuna"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"[..]$ python mnist_classify.py\n")))}m.isMDXComponent=!0}}]);