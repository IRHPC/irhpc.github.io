"use strict";(self.webpackChunkhpcdocs=self.webpackChunkhpcdocs||[]).push([[1789],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>h});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=a.createContext({}),c=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=c(e.components);return a.createElement(l.Provider,{value:n},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(t),d=r,h=u["".concat(l,".").concat(d)]||u[d]||m[d]||o;return t?a.createElement(h,i(i({ref:n},p),{},{components:t})):a.createElement(h,i({ref:n},p))}));function h(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=d;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[u]="string"==typeof e?e:r,i[1]=s;for(var c=2;c<o;c++)i[c]=t[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},8553:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var a=t(7462),r=(t(7294),t(3905));const o={slug:"unixconnecting"},i="UNIX",s={unversionedId:"connecting/unix",id:"connecting/unix",title:"UNIX",description:"Terminal",source:"@site/docs/connecting/02_unix.md",sourceDirName:"connecting",slug:"/connecting/unixconnecting",permalink:"/docs/connecting/unixconnecting",draft:!1,editUrl:"https://github.com/irhpc/irhpc.github.io/edit/main/docs/connecting/02_unix.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{slug:"unixconnecting"},sidebar:"tutorialSidebar",previous:{title:"Connection & SSH keys",permalink:"/docs/connecting/connectingssh"},next:{title:"Windows",permalink:"/docs/connecting/windowsconnecting"}},l={},c=[{value:"Terminal",id:"terminal",level:2},{value:"Errors",id:"errors",level:2},{value:"Permission denied",id:"permission-denied",level:3}],p={toc:c},u="wrapper";function m(e){let{components:n,...t}=e;return(0,r.kt)(u,(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"unix"},"UNIX"),(0,r.kt)("h2",{id:"terminal"},"Terminal"),(0,r.kt)("p",null,"To generate an SSH key pair:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"[..]$ ssh-keygen -f ~/.ssh/id_name -t rsa -b 4096\n")),(0,r.kt)("p",null,'Here the key pair is named "id',"_",'name" as an example.'),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"It is OK to leave the passphrase empty when prompted (i.e. no password). Be aware that if you choose a password your SSH-key based access may not work with SFTP software like FileZilla.")),(0,r.kt)("p",null,'The public part of the key is found here "~/.ssh/id',"_",'name.pub", and it is easiest to view the content like this'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"[..]$ cat ~/.ssh/id_name.pub\n")),(0,r.kt)("p",null,"Copy the content and send it to the admins."),(0,r.kt)("p",null,"After the public key has been uploaded to the login node by the admin, you can log into the system like this"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"[..]$ ssh <uname>@elja.hi.is\n# or if you are juggling many SSH keys\n[..]$ ssh -i ~/.ssh/id_name <uname>@elja.hi.is\n")),(0,r.kt)("p",null,"Your terminal window should display a login message, followed by a command line like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"[<uname>@elja-ihpc ~]$\n")),(0,r.kt)("p",null,'For quick access it is recommended to make an "alias" in the "~/.bashrc" of your local machine:'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'[..]$ cat >> ~/.bashrc << EOF\n> alias elja="ssh -i ~/.ssh/id_name <uname>@elja.hi.is\nEOF\n')),(0,r.kt)("p",null,'After sourcing the "~/.bashrc" you can log in like this:'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"[..]$ elja                          \n")),(0,r.kt)("p",null,"Alternatively you can add a ",(0,r.kt)("strong",{parentName:"p"},"config")," file to your ",(0,r.kt)("strong",{parentName:"p"},".ssh")," directory"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"[..]$ touch ~/.ssh/config\n[..]$ chmod 600 ~/.ssh/config\n")),(0,r.kt)("p",null,"then add information about ",(0,r.kt)("strong",{parentName:"p"},"Elja")," to the config file"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"[..]$ cat >> ~/.ssh/config << EOF\n> Host Elja\n>    HostName elja.hi.is\n>    User <uname>\n>    Port 22\n>    IdentityFile ~/.ssh/id_elja\nEOF\n")),(0,r.kt)("p",null,"You can now log in via"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"[..]$ ssh Elja\n")),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("strong",{parentName:"p"},"These instruction will not work for Windows command prompt."))),(0,r.kt)("h2",{id:"errors"},"Errors"),(0,r.kt)("h3",{id:"permission-denied"},"Permission denied"),(0,r.kt)("p",null,"If you get a ",(0,r.kt)("inlineCode",{parentName:"p"},"permission denied")," error when trying to connect to Elja you can do the following to possibly solve your issue:"),(0,r.kt)("p",null,"Your ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},".ssh"))," directory is located in your $HOME directory. Go to $HOME and type:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ cd $HOME\n$ ls -la .ssh\n")),(0,r.kt)("p",null,"This will list the permission of the ",(0,r.kt)("strong",{parentName:"p"},".ssh")," folder and files in the folder. Your common files (e.g. known_hosts) and public key files must have the following permissions: ",(0,r.kt)("strong",{parentName:"p"},"-rw-r--r--")),(0,r.kt)("p",null,"To change to the correct permission type:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ chmod 644 .ssh/known_hosts\n$ chmod 644 .ssh/*.pub\n")),(0,r.kt)("p",null,"You private keys must have the permission : ",(0,r.kt)("strong",{parentName:"p"},"-rw-------")),(0,r.kt)("p",null,"To change to the correct permission type:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ chmod 600 .ssh/nameofkey\n")),(0,r.kt)("p",null,"Finally, the ",(0,r.kt)("strong",{parentName:"p"},".ssh")," folder must have the following permission : ",(0,r.kt)("strong",{parentName:"p"},"drwx------")),(0,r.kt)("p",null,"To change to the correct permission type:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ chmod 700 .ssh/\n")))}m.isMDXComponent=!0}}]);