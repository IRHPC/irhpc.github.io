"use strict";(self.webpackChunkhpcdocs=self.webpackChunkhpcdocs||[]).push([[4981],{3905:(t,e,a)=>{a.d(e,{Zo:()=>m,kt:()=>k});var r=a(7294);function n(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function l(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,r)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?l(Object(a),!0).forEach((function(e){n(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function o(t,e){if(null==t)return{};var a,r,n=function(t,e){if(null==t)return{};var a,r,n={},l=Object.keys(t);for(r=0;r<l.length;r++)a=l[r],e.indexOf(a)>=0||(n[a]=t[a]);return n}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(r=0;r<l.length;r++)a=l[r],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(n[a]=t[a])}return n}var p=r.createContext({}),s=function(t){var e=r.useContext(p),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},m=function(t){var e=s(t.components);return r.createElement(p.Provider,{value:e},t.children)},d="mdxType",u={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},g=r.forwardRef((function(t,e){var a=t.components,n=t.mdxType,l=t.originalType,p=t.parentName,m=o(t,["components","mdxType","originalType","parentName"]),d=s(a),g=n,k=d["".concat(p,".").concat(g)]||d[g]||u[g]||l;return a?r.createElement(k,i(i({ref:e},m),{},{components:a})):r.createElement(k,i({ref:e},m))}));function k(t,e){var a=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var l=a.length,i=new Array(l);i[0]=g;var o={};for(var p in e)hasOwnProperty.call(e,p)&&(o[p]=e[p]);o.originalType=t,o[d]="string"==typeof t?t:n,i[1]=o;for(var s=2;s<l;s++)i[s]=a[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}g.displayName="MDXCreateElement"},4751:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>p,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>o,toc:()=>s});var r=a(7462),n=(a(7294),a(3905));const l={slug:"Metaerg"},i="Metaerg",o={unversionedId:"software/Metaerg",id:"software/Metaerg",title:"Metaerg",description:"0. Introduction",source:"@site/docs/software/09_Metaerg.md",sourceDirName:"software",slug:"/software/Metaerg",permalink:"/docs/software/Metaerg",draft:!1,editUrl:"https://github.com/irhpc/irhpc.github.io/edit/main/docs/software/09_Metaerg.md",tags:[],version:"current",sidebarPosition:9,frontMatter:{slug:"Metaerg"},sidebar:"tutorialSidebar",previous:{title:"TensorFlow",permalink:"/docs/software/TensorFlow-GPU"},next:{title:"Other softwares",permalink:"/docs/software/Other"}},p={},s=[{value:"0. Introduction",id:"0-introduction",level:2},{value:"1. Getting Started",id:"1-getting-started",level:2},{value:"1.1 Installation",id:"11-installation",level:3},{value:"1.2 Required Tools and libraries",id:"12-required-tools-and-libraries",level:3},{value:"2 Run Metaerg on Elja",id:"2-run-metaerg-on-elja",level:2},{value:"2.1 Loading Metaerg",id:"21-loading-metaerg",level:3},{value:"2.2 Running Metaerg",id:"22-running-metaerg",level:3}],m={toc:s},d="wrapper";function u(t){let{components:e,...a}=t;return(0,n.kt)(d,(0,r.Z)({},m,a,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"metaerg"},"Metaerg"),(0,n.kt)("h2",{id:"0-introduction"},"0. Introduction"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("em",{parentName:"strong"},"Metaerg"))," is a automated pipeline that uses third-party softwares aswell as a large database to annotate genomes or sets of bins from microbial ecosystems. Example of such annotations tasks are feature prediction with ",(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("em",{parentName:"strong"},"HMM")),", ",(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("em",{parentName:"strong"},"BLAST"))," and ",(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("em",{parentName:"strong"},"DIAMOND")),"."),(0,n.kt)("p",null,"learn more about ",(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("em",{parentName:"strong"},"Metaerg"))," by reading from their ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/xiaoli-dong/metaerg"},"github repository"),"  and the following ",(0,n.kt)("a",{parentName:"p",href:"https://www.frontiersin.org/articles/10.3389/fgene.2019.00999/full"},"article")," in ",(0,n.kt)("a",{parentName:"p",href:"https://www.frontiersin.org/"},"frontiersin")," which was written by the same people who made ",(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("em",{parentName:"strong"},"Metaerg")),"."),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"1-getting-started"},"1. Getting Started"),(0,n.kt)("h3",{id:"11-installation"},"1.1 Installation"),(0,n.kt)("p",null,"There are many possibilites when it comes to install ",(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("em",{parentName:"strong"},"Metaerg")),". One way is using ",(0,n.kt)("a",{parentName:"p",href:"https://www.docker.com/"},"Docker")," which was not used since Elja does not currently provide any container support. Another possibility was to use ",(0,n.kt)("a",{parentName:"p",href:"https://docs.easybuild.io/"},"Easybuild")," which does not provide the latest version (only provides verison ",(0,n.kt)("a",{parentName:"p",href:"https://docs.easybuild.io/version-specific/supported-software/#metaerg"},"1.2.3"),") of ",(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("em",{parentName:"strong"},"Metaerg")),".\nThe third option that was chosen was to mannually install ",(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("em",{parentName:"strong"},"Metaerg"))," and its other helper programs, starting by cloning ",(0,n.kt)("a",{parentName:"p",href:"https://docs.easybuild.io/version-specific/supported-software/#metaerg"},"this")," git repository and following its installation instructions and the requirements in the README.md file."),(0,n.kt)("h3",{id:"12-required-tools-and-libraries"},"1.2 Required Tools and libraries"),(0,n.kt)("center",null,(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Perl Modules")," "),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Dependencies"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Archive::Extract")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Bio::Perl")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Bio::DB::EUtilities")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"DBD::SQLite")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"DBI")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"File::Copy::Recursive")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"HTML::Entities")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"LWP::Protocol::https")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"SWISS::Entry")))),(0,n.kt)("p",null,(0,n.kt)("em",{parentName:"p"},"Table 1. This table displays all required Perl modules that are required to run Metaerg"))),(0,n.kt)("center",null,(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Dependencies"),(0,n.kt)("th",{parentName:"tr",align:null},"Req. version"),(0,n.kt)("th",{parentName:"tr",align:null},"Version on Elja"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"antismash"),(0,n.kt)("td",{parentName:"tr",align:null},"\u22656.0.0"),(0,n.kt)("td",{parentName:"tr",align:null},"7.0.0")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"ARAGORN"),(0,n.kt)("td",{parentName:"tr",align:null},"x"),(0,n.kt)("td",{parentName:"tr",align:null},"1.2.41")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"minced"),(0,n.kt)("td",{parentName:"tr",align:null},"x"),(0,n.kt)("td",{parentName:"tr",align:null},"0.4.2")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"BLAST+ executeables"),(0,n.kt)("td",{parentName:"tr",align:null},"x"),(0,n.kt)("td",{parentName:"tr",align:null},"2.13.0")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"DIAMOND"),(0,n.kt)("td",{parentName:"tr",align:null},"2.0.13"),(0,n.kt)("td",{parentName:"tr",align:null},"2.0.13")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"GenomeTools"),(0,n.kt)("td",{parentName:"tr",align:null},"x"),(0,n.kt)("td",{parentName:"tr",align:null},"1.6.2")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"HMMER"),(0,n.kt)("td",{parentName:"tr",align:null},"3.x.x"),(0,n.kt)("td",{parentName:"tr",align:null},"3.3.2")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Infernal"),(0,n.kt)("td",{parentName:"tr",align:null},"x"),(0,n.kt)("td",{parentName:"tr",align:null},"1.1.4")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"prodigal"),(0,n.kt)("td",{parentName:"tr",align:null},"x"),(0,n.kt)("td",{parentName:"tr",align:null},"2.6.3")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"pyarrow"),(0,n.kt)("td",{parentName:"tr",align:null},"x"),(0,n.kt)("td",{parentName:"tr",align:null},"12.0.0")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Python"),(0,n.kt)("td",{parentName:"tr",align:null},"x"),(0,n.kt)("td",{parentName:"tr",align:null},"3.10.4")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"RepeatMasker"),(0,n.kt)("td",{parentName:"tr",align:null},"x"),(0,n.kt)("td",{parentName:"tr",align:null},"4.1.4")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"RepeatScout"),(0,n.kt)("td",{parentName:"tr",align:null},"x"),(0,n.kt)("td",{parentName:"tr",align:null},"1.0.6")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"signalp"),(0,n.kt)("td",{parentName:"tr",align:null},"x"),(0,n.kt)("td",{parentName:"tr",align:null},"0.5b")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"tmhmm"),(0,n.kt)("td",{parentName:"tr",align:null},"x"),(0,n.kt)("td",{parentName:"tr",align:null},"2.0c")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Tandem Repeats Finder"),(0,n.kt)("td",{parentName:"tr",align:null},"x"),(0,n.kt)("td",{parentName:"tr",align:null},"4.09.1")))),(0,n.kt)("p",null,(0,n.kt)("em",{parentName:"p"},"Table 2. This table displays all main dependencies that are required to install MetaErg"))),(0,n.kt)("h2",{id:"2-run-metaerg-on-elja"},"2 Run Metaerg on Elja"),(0,n.kt)("h3",{id:"21-loading-metaerg"},"2.1 Loading Metaerg"),(0,n.kt)("p",null,"Before being able to run ",(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("em",{parentName:"strong"},"Metaerg"))," on Elja, you will have to load the ",(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("em",{parentName:"strong"},"Metaerg"))," module. To do this you type these following commands in the terminal:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"[..]$ ml use /hpcapps/libbio-gpu/modules/all\n[..]$ ml load Metaerg\xb4\xb4\xb4\n")),(0,n.kt)("h3",{id:"22-running-metaerg"},"2.2 Running Metaerg"),(0,n.kt)("p",null,"To run ",(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("em",{parentName:"strong"},"Metaerg"))," you will have to type ",(0,n.kt)("inlineCode",{parentName:"p"},"metaerg")," with parameters which you can find ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/kinestetika/MetaErg#usage"},"here"),". An example of a ",(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("em",{parentName:"strong"},"Metaerg"))," run would look like this:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"[..] $ metaerg --contig_file dir-with contig-files --database_dir /AlphaFoldData/MetaergData/ \\ --file_extension .fa\n")),(0,n.kt)("p",null,"Note that ",(0,n.kt)("strong",{parentName:"p"},"--database_dir /AlphaFoldData/MetaergData/")," is always necessary as this is the location of the ",(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("em",{parentName:"strong"},"Metaerg"))," database which the machine learned code is based on."))}u.isMDXComponent=!0}}]);