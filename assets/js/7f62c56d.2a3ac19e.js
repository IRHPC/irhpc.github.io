(self.webpackChunkhpcdocs=self.webpackChunkhpcdocs||[]).push([[345],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return l},kt:function(){return b}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var u=n.createContext({}),c=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},l=function(e){var t=c(e.components);return n.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),m=c(r),b=a,f=m["".concat(u,".").concat(b)]||m[b]||p[b]||o;return r?n.createElement(f,i(i({ref:t},l),{},{components:r})):n.createElement(f,i({ref:t},l))}));function b(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=m;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},3075:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return i},metadata:function(){return s},toc:function(){return u},default:function(){return l}});var n=r(2122),a=r(9756),o=(r(7294),r(3905)),i={slug:"submit_jobs"},s={unversionedId:"elja/submit",id:"elja/submit",isDocsHomePage:!1,title:"Submitting Jobs",description:"Batch jobs",source:"@site/docs/elja/02_submit.md",sourceDirName:"elja",slug:"/elja/submit_jobs",permalink:"/docs/elja/submit_jobs",editUrl:"https://github.com/irhpc/irhpc.github.io/edit/main/docs/elja/02_submit.md",version:"current",sidebarPosition:2,frontMatter:{slug:"submit_jobs"},sidebar:"tutorialSidebar",previous:{title:"Bash",permalink:"/docs/elja/bash"},next:{title:"Nix",permalink:"/docs/elja/nix_start"}},u=[{value:"Batch jobs",id:"batch-jobs",children:[]},{value:"Array jobs",id:"array-jobs",children:[]}],c={toc:u};function l(e){var t=e.components,r=(0,a.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"batch-jobs"},"Batch jobs"),(0,o.kt)("p",null,"The command ",(0,o.kt)("inlineCode",{parentName:"p"},"sbatch")," is used to submit jobs to the ",(0,o.kt)("inlineCode",{parentName:"p"},"SLURM")," queue"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sbatch submit_script\n")),(0,o.kt)("p",null,"A batch submit script usually starts like this"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"#!/bin/bash\n#SBATCH --mail-type=ALL\n#SBATCH --mail-user=<Your E-mail> # for example uname@ugla.is\n#SBATCH --partition=Intel48\n#SBATCH -N 2      # Minimum of 1 node\n#SBATCH -n 96     # 48 MPI processes per node, 96 tasks in total, appropriate for Intel24\n#SBATCH --time=0-04:00:00 # run for 4 hours maximum (1-00:00:00 is equivalent to 1 Day)\n#SBATCH --output=slurm_job_output.log   \n#SBATCH --error=slurm_job_errors.log   # Logs if job crashes\n")),(0,o.kt)("p",null,"To cancel a job type"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"scancel <jobid>\n")),(0,o.kt)("p",null,"The IDs of your jobs can be revealed like this"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"squeue -u <uname>\n")),(0,o.kt)("h2",{id:"array-jobs"},"Array jobs"))}l.isMDXComponent=!0}}]);