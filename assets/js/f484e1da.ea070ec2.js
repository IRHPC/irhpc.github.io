(self.webpackChunkhpcdocs=self.webpackChunkhpcdocs||[]).push([[852],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return p},kt:function(){return m}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=s(n),m=i,f=d["".concat(c,".").concat(m)]||d[m]||u[m]||a;return n?r.createElement(f,o(o({ref:t},p),{},{components:n})):r.createElement(f,o({ref:t},p))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var s=2;s<a;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1597:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return o},metadata:function(){return l},toc:function(){return c},default:function(){return p}});var r=n(2122),i=n(9756),a=(n(7294),n(3905)),o={slug:"easybuild"},l={unversionedId:"compiling/packages",id:"compiling/packages",isDocsHomePage:!1,title:"Available Software Environments",description:"This page outlines software stacks available to the users.",source:"@site/docs/compiling/01_packages.md",sourceDirName:"compiling",slug:"/compiling/easybuild",permalink:"/docs/compiling/easybuild",editUrl:"https://github.com/irhpc/irhpc.github.io/edit/main/docs/compiling/01_packages.md",version:"current",sidebarPosition:1,frontMatter:{slug:"easybuild"},sidebar:"tutorialSidebar",previous:{title:"Data & Storage",permalink:"/docs/hardware/storage"},next:{title:"Programming and Development Environments",permalink:"/docs/compiling/environment"}},c=[{value:"libsci-gcc",id:"libsci-gcc",children:[{value:"Precompiled software",id:"precompiled-software",children:[]}]},{value:"libsci-intel",id:"libsci-intel",children:[{value:"Precompiled software",id:"precompiled-software-1",children:[]}]}],s={toc:c};function p(e){var t=e.components,n=(0,i.Z)(e,["components"]);return(0,a.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"This page outlines software stacks available to the users."),(0,a.kt)("h1",{id:"easybuild-stacks"},"EasyBuild stacks"),(0,a.kt)("p",null,"The available EasyBuild stack dependancies are linked against the OS libraries using EasyBuild-4.5.4. A stack tree starts with a compiler environment (i.e. GCC-version). A step by step compilation process is available here (link to github). The stacks are managed with Lmod, and in general it is enough to load in the module to correctly append the necessary paths."),(0,a.kt)("h2",{id:"libsci-gcc"},"libsci-gcc"),(0,a.kt)("p",null,"The libsci-gcc tree provides a compilation of free and open source software providing commonly used numerical libraries for scientific software and applications. It starts with GCC-11.2.0, and is located in /hpcapps/libsci-gcc/ "),(0,a.kt)("h3",{id:"precompiled-software"},"Precompiled software"),(0,a.kt)("p",null,"GCC/OpenMPI"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"OpenBLAS, Lapack"),(0,a.kt)("li",{parentName:"ul"},"Scalapack, FFTW"),(0,a.kt)("li",{parentName:"ul"},"Libxc"),(0,a.kt)("li",{parentName:"ul"},"Python")),(0,a.kt)("p",null,"Python includes Numpy and Scipy linked to OpenBLAS."),(0,a.kt)("h2",{id:"libsci-intel"},"libsci-intel"),(0,a.kt)("h3",{id:"precompiled-software-1"},"Precompiled software"),(0,a.kt)("p",null,"icc/intelmpi:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"intelmkl"),(0,a.kt)("li",{parentName:"ul"},"Libxc"),(0,a.kt)("li",{parentName:"ul"},"Python")),(0,a.kt)("p",null,"The intelmkl provides blas, lapack, scalapack and fftw."))}p.isMDXComponent=!0}}]);